<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <FontFamily x:Key="ElementIcon">/Library/Font/element-icons.ttf#element</FontFamily>

    <Style x:Key="AccountCodeTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="56"/>
        <Setter Property="Width" Value="360"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="#606266"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="brdTextBox" Padding="15,0,15,0" BorderBrush="#C8C8CC" BorderThickness="1" Background="#FFFFFF" CornerRadius="28">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="36,0,0,0" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <StackPanel Orientation="Horizontal" IsHitTestVisible="False">
                                <Image Height="32" Width="32" Source="/Library/Image/geren6@2x.png" />
                                <TextBlock x:Name="txbHint" VerticalAlignment="Center" Margin="8,0,0,0" Foreground="#969699" Text="{DynamicResource EntryAccountCode}" Visibility="Collapsed"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="txbHint" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Password_TextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="56"/>
        <Setter Property="Width" Value="360"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="#606266"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="brdTextBox" Padding="15,0,15,0" BorderBrush="#C8C8CC" BorderThickness="1" Background="#FFFFFF" CornerRadius="28">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="36,0,36,0" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <StackPanel Orientation="Horizontal" IsHitTestVisible="False">
                                <Image Height="32" Width="32" Source="/Library/Image/mima@2x.png" />
                                <TextBlock x:Name="txbHint" VerticalAlignment="Center" Margin="8,0,0,0" Foreground="#969699" Text="{DynamicResource EntryPassword}" Visibility="Collapsed"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="txbHint" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Password_PasswordBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="Height" Value="56"/>
        <Setter Property="Width" Value="360"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="#606266"/>
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="brdTextBox" Padding="15,0,15,0" BorderBrush="#C8C8CC" BorderThickness="1" Background="#FFFFFF" CornerRadius="28">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="36,0,36,0" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <StackPanel Orientation="Horizontal" IsHitTestVisible="False">
                                <Image Height="32" Width="32" Source="/Library/Image/mima@2x.png" />
                                <TextBlock x:Name="txbHint" VerticalAlignment="Center" Margin="8,0,0,0" Foreground="#969699" Text="{DynamicResource EntryPassword}" Visibility="Collapsed"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_ContentHost" Property="ExtentWidth" Value="0">
                            <Setter TargetName="txbHint" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EyeImage" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/Library/Image/conceal.png"/>
        <Setter Property="Tag" Value="0"/>
        <Style.Triggers>
            <Trigger Property="Tag" Value="1">
                <Setter Property="Source" Value="/Library/Image/show.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SelectBorder" TargetType="{x:Type Border}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="0,8,0,8"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Background" Value="#FFFFFF"/>
        <Style.Triggers>
            <Trigger Property="Tag" Value="1">
                <Setter Property="Background" Value="#EBFAFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--主要按钮-->
    <Style x:Key="ButtonPrimary" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="MinWidth" Value="70"/>
        <Setter Property="Background" Value="#FF6D00"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="20,0,20,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#FF8A33" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#FF6D00" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#E66200"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="LayoutinformationTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="341"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="#606266"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="brdTextBox" Padding="15,0,15,0" BorderBrush="#FFC8C8CC" BorderThickness="1" Background="#FFFFFF" CornerRadius="5">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <StackPanel Orientation="Horizontal" IsHitTestVisible="False">
                                <TextBlock x:Name="txbHint" VerticalAlignment="Center" Margin="8,0,0,0" Foreground="#969699" Text="{DynamicResource Layoutinformationinput}" Visibility="Collapsed"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="txbHint" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RemarksTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="100"/>
        <Setter Property="Width" Value="341"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="#606266"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="brdTextBox" Padding="15,0,15,0" BorderBrush="#FFC8C8CC" BorderThickness="1" Background="#FFFFFF" CornerRadius="5">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"  Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <StackPanel Orientation="Horizontal" IsHitTestVisible="False">
                                <TextBlock x:Name="txbHint" VerticalAlignment="Center" Margin="8,0,0,60" Foreground="#969699" Text="{DynamicResource Layoutinformationinput}" Visibility="Collapsed"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="txbHint" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ConfirmUploadButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="64"/>
        <Setter Property="Width" Value="180"/>
        <Setter Property="Background" Value="#FF0D78D8"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="20,0,20,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="8" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#FF8A33" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#FF6D00" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#E66200"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DrawingBrush x:Key="UploadLeftborderBrush" Viewport="0,0,8,8" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="#FFC8C8CC">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,5,5" />
                            <RectangleGeometry Rect="5,5,5,5" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <Style x:Key="AddImage" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/Library/Image/addfile.png"/>
        <Setter Property="Tag" Value="0"/>
        <Style.Triggers>
            <Trigger Property="Tag" Value="1">
                <Setter Property="Source" Value="/Library/Image/tiff.png"/>
            </Trigger>
            <Trigger Property="Tag" Value="2">
                <Setter Property="Source" Value="/Library/Image/Psd.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AddImageright" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/Library/Image/addfile.png"/>
        <Setter Property="Tag" Value="0"/>
        <Style.Triggers>
            <Trigger Property="Tag" Value="1">
                <Setter Property="Source" Value="/Library/Image/png.png"/>
            </Trigger>
            <Trigger Property="Tag" Value="2">
                <Setter Property="Source" Value="/Library/Image/Jpg.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DeleteUploadButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Tag" Value="0"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="Foreground" Value="#969699 "/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#C8C8CC"  CornerRadius="15" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="1">
                            <Setter Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="0">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PageListsPageDataGridColumnHeader" TargetType="DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="#FFF5F5FA" />
        <Setter Property="Foreground" Value="#FF323233" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="starttoendtimeTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="#606266"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="brdTextBox" Padding="15,0,15,0" BorderBrush="#FFC8C8CC" BorderThickness="1" Background="#FFFFFF" CornerRadius="5">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <StackPanel Orientation="Horizontal" IsHitTestVisible="False">
                                <TextBlock x:Name="txbHint" VerticalAlignment="Center" Margin="8,0,0,0" Foreground="#969699" Text="{DynamicResource starttimeandentime}" Visibility="Collapsed"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="txbHint" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="uploaderTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="130"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Margin" Value="15,0,0,0"/>
        <Setter Property="Foreground" Value="#606266"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="brdTextBox" Padding="15,0,15,0" BorderBrush="#FFC8C8CC" BorderThickness="1" Background="#FFFFFF" CornerRadius="5">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <StackPanel Orientation="Horizontal" IsHitTestVisible="False">
                                <TextBlock x:Name="txbHint" VerticalAlignment="Center" Margin="8,0,0,0" Foreground="#969699" Text="{DynamicResource Uploader}" Visibility="Collapsed"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="txbHint" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="fileNameTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="Margin" Value="15,0,0,0"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="#606266"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="brdTextBox" Padding="15,0,15,0" BorderBrush="#FFC8C8CC" BorderThickness="1" Background="#FFFFFF" CornerRadius="5">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <StackPanel Orientation="Horizontal" IsHitTestVisible="False">
                                <TextBlock x:Name="txbHint" VerticalAlignment="Center" Margin="8,0,0,0" Foreground="#969699" Text="{DynamicResource fileName}" Visibility="Collapsed"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="txbHint" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="butselect" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Margin" Value="15,0,0,0"/>
        <Setter Property="Background" Value="#FF0D78D8"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#C8C8CC"  CornerRadius="8" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="butreset" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Margin" Value="15,0,0,0"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF323233"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#C8C8CC"  CornerRadius="8" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="butuploadingall" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Background" Value="#FFF5F5FA"/>
        <Setter Property="Foreground" Value="#FF323233"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#C8C8CC"  CornerRadius="8" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--复选框-->
    <Style x:Key="CheckBoxElement" TargetType="{x:Type CheckBox}">
        <Setter Property="TextBlock.FontSize" Value="14"/>
        <Setter Property="TextBlock.Foreground" Value="#606266"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Grid Height="16" Width="16" VerticalAlignment="Center">
                            <Path x:Name="pthCheckBox" Fill="#FFFFFF" Stroke="#DCDFE6" StrokeThickness="1" Data="M 1.5,0.5 L 14.5,0.5 A 1,1 0 0 1 15.5,1.5 L 15.5 14.5 A 1,1 0 0 1 14.5,15.5 L 1.5,15.5 A 1,1 0 0 1 0.5,14.5 L 0.5,1.5 A 1,1 0 0 1 1.5,0.5 Z"/>
                            <Path Fill="#FF6D00" Data="M 1.5,0 L 14.5,0 A 1.5,1.5 0 0 1 16,1.5 L 16,14.5 A 1.5,1.5 0 0 1 14.5 16 L 1.5,16 A 1.5 1.5 0 0 1 0,14.5 L 0,1.5 A 1.5 1.5 0 0 1 1.5,0 Z">
                                <Path.RenderTransform>
                                    <ScaleTransform x:Name="stfIsChecked" ScaleX="0" ScaleY="0"/>
                                </Path.RenderTransform>
                                <Path.RenderTransformOrigin>
                                    <Point X="0.5" Y="0.5"/>
                                </Path.RenderTransformOrigin>
                            </Path>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="{StaticResource ElementIcon}" FontSize="12.5" Foreground="#FFFFFF" Text="&#xe6da;"/>
                        </Grid>
                        <ContentPresenter VerticalAlignment="Center" Margin="7,0,0,0" Visibility="Collapsed"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="pthCheckBox" Storyboard.TargetProperty="Stroke.(SolidColorBrush.Color)" To="#FF6D00" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="pthCheckBox" Storyboard.TargetProperty="Stroke.(SolidColorBrush.Color)" To="#DCDFE6" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="TextBlock.Foreground" Value="#FF6D00"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="stfIsChecked" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="stfIsChecked" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="stfIsChecked" Storyboard.TargetProperty="ScaleX" To="0" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="stfIsChecked" Storyboard.TargetProperty="ScaleY" To="0" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollViewer 滚动条 -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <!--滚动条颜色-->
                        <Border Background="#C0C4CC" CornerRadius="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Opacity" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Opacity" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton2" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Opacity" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="#90000000" Width="0" Height="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="for_scrollbar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="MinWidth" Value="6" />
        <Setter Property="Width" Value="6" />
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Opacity" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <RepeatButton Grid.Row="0" Style="{StaticResource VerticalScrollBarPageButton2}" Command="{x:Static ScrollBar.PageUpCommand}" />
                        <Track x:Name="PART_Track" Grid.Row="1" IsEnabled="{TemplateBinding IsMouseOver}" IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Grid.Row="2" Style="{StaticResource VerticalScrollBarPageButton2}" Command="{x:Static ScrollBar.PageDownCommand}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="6" />
                <Setter Property="MinHeight" Value="6" />
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Opacity" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}" Command="{x:Static ScrollBar.PageLeftCommand}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}" Command="{x:Static ScrollBar.PageRightCommand}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="for_scrollviewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}">
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="True" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" HorizontalAlignment="Right" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Style="{StaticResource for_scrollbar}" ViewportSize="{TemplateBinding ViewportHeight}" Value="{TemplateBinding VerticalOffset}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Style="{StaticResource for_scrollbar}" VerticalAlignment="Bottom" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.6" Duration="0:0:0.4" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.4" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.6" Duration="0:0:0.4" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.4" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ItemsControlScroll" TargetType="{x:Type ItemsControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <ScrollViewer Style="{StaticResource for_scrollviewer}" PanningMode="VerticalFirst">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--进度条-->
    <Style x:Key="ProgressBarElement" TargetType="{x:Type ProgressBar}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Border.CornerRadius" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding Border.CornerRadius}"/>
                        <Border x:Name="PART_Track" MinWidth="6" CornerRadius="{TemplateBinding Border.CornerRadius}"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Border x:Name="Indicator" MinWidth="6" Background="{TemplateBinding Foreground}" CornerRadius="{TemplateBinding Border.CornerRadius}"/>
                            <Border x:Name="Animation" MinWidth="6" Background="{TemplateBinding Foreground}" CornerRadius="{TemplateBinding Border.CornerRadius}" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ToggleButton自定义内容-->
    <Style x:Key="ToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ContentControl Content="{TemplateBinding Content}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--文字渐变(危险)-->
    <Style x:Key="TextBlockIconDanger" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#606266"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#F78989" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#606266" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--默认按钮(等待)-->
    <Style x:Key="ButtonElementWait" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="MinWidth" Value="70"/>
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="#DCDFE6"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#606266"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Padding="20,0,20,0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter VerticalAlignment="Center"/>
                            <TextBlock x:Name="txbWait" VerticalAlignment="Center" Margin="5,0,0,0" FontFamily="{StaticResource ElementIcon}" FontSize="15" Text="&#xe6cf;" Visibility="Collapsed">
                                <TextBlock.RenderTransform>
                                    <RotateTransform x:Name="rtfWait"/>
                                </TextBlock.RenderTransform>
                                <TextBlock.RenderTransformOrigin>
                                    <Point X="0.5" Y="0.5"/>
                                </TextBlock.RenderTransformOrigin>
                                <TextBlock.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimation Storyboard.TargetName="rtfWait" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:1.5"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </TextBlock.Triggers>
                            </TextBlock>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="txbWait" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--主要按钮(等待)-->
    <Style x:Key="ButtonPrimaryWait" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="MinWidth" Value="70"/>
        <Setter Property="Background" Value="#0D78D8"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="20,0,20,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4" Padding="{TemplateBinding Padding}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter VerticalAlignment="Center"/>
                            <TextBlock x:Name="txbWait" VerticalAlignment="Center" Margin="5,0,0,0" FontFamily="{StaticResource ElementIcon}" FontSize="15" Text="&#xe6cf;" Visibility="Collapsed">
                                <TextBlock.RenderTransform>
                                    <RotateTransform x:Name="rtfWait"/>
                                </TextBlock.RenderTransform>
                                <TextBlock.RenderTransformOrigin>
                                    <Point X="0.5" Y="0.5"/>
                                </TextBlock.RenderTransformOrigin>
                                <TextBlock.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimation Storyboard.TargetName="rtfWait" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:1.5"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </TextBlock.Triggers>
                            </TextBlock>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="txbWait" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>